// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graph_model

type Mutation struct {
}

type Query struct {
}

type ChannelData struct {
	ChannelCode string  `json:"channelCode"`
	ChannelID   int     `json:"channelId"`
	Data        []int32 `json:"data"`
}

type ConfigConstraint struct {
	Namespace    string `json:"namespace"`
	Key          string `json:"key"`
	Name         string `json:"name"`
	Description  string `json:"description"`
	ConfigType   string `json:"configType"`
	IsRequired   bool   `json:"isRequired"`
	CurrentValue any    `json:"currentValue"`
	Options      any    `json:"options,omitempty"`
}

type DeviceConfig struct {
	PacketInterval int64    `json:"packetInterval"`
	SampleRate     int      `json:"sampleRate"`
	ChannelCodes   []string `json:"channelCodes"`
	GnssEnabled    bool     `json:"gnssEnabled"`
	Model          string   `json:"model"`
	Protocol       string   `json:"protocol"`
}

type DeviceInfo struct {
	Latitude    *float64 `json:"latitude,omitempty"`
	Longitude   *float64 `json:"longitude,omitempty"`
	Elevation   *float64 `json:"elevation,omitempty"`
	Temperature *float64 `json:"temperature,omitempty"`
}

type DeviceStatus struct {
	StartedAt int64 `json:"startedAt"`
	UpdatedAt int64 `json:"updatedAt"`
	Frames    int64 `json:"frames"`
	Errors    int64 `json:"errors"`
	Messages  int64 `json:"messages"`
}

type SeisEvent struct {
	Verfied    bool                   `json:"verfied"`
	Timestamp  int64                  `json:"timestamp"`
	EventID    string                 `json:"eventId"`
	Region     string                 `json:"region"`
	Depth      float64                `json:"depth"`
	Latitude   float64                `json:"latitude"`
	Longitude  float64                `json:"longitude"`
	Magnitude  map[string]interface{} `json:"magnitude"`
	Distance   float64                `json:"distance"`
	Estimation []float64              `json:"estimation"`
}

type SeisEventSource struct {
	ID            string                 `json:"id"`
	Country       string                 `json:"country"`
	Locales       map[string]interface{} `json:"locales"`
	DefaultLocale string                 `json:"defaultLocale"`
}

type SeisRecord struct {
	Timestamp   int64          `json:"timestamp"`
	SampleRate  int            `json:"sampleRate"`
	ChannelData []*ChannelData `json:"channelData"`
}

type ServiceAsset struct {
	Namespace  string `json:"namespace"`
	Size       int64  `json:"size"`
	FilePath   string `json:"filePath"`
	FileName   string `json:"fileName"`
	ModifiedAt int64  `json:"modifiedAt"`
}

type ServiceConfigConstraint struct {
	ServiceName string              `json:"serviceName"`
	ServiceID   string              `json:"serviceId"`
	Constraints []*ConfigConstraint `json:"constraints"`
}

type ServiceStatus struct {
	ServiceID   string `json:"serviceId"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Restarts    int    `json:"restarts"`
	StartedAt   int64  `json:"startedAt"`
	StoppedAt   int64  `json:"stoppedAt"`
	UpdatedAt   int64  `json:"updatedAt"`
	IsRunning   bool   `json:"isRunning"`
}

type SysUser struct {
	CreatedAt int64  `json:"createdAt"`
	UserID    string `json:"userId"`
	Username  string `json:"username"`
	LastLogin int64  `json:"lastLogin"`
	UserIP    string `json:"userIp"`
	UserAgent string `json:"userAgent"`
	Admin     bool   `json:"admin"`
	UpdatedAt int64  `json:"updatedAt"`
}

type SystemStatus struct {
	CPU    float64 `json:"cpu"`
	Memory float64 `json:"memory"`
	Disk   float64 `json:"disk"`
	Uptime int64   `json:"uptime"`
}
