name: Test build from source

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - "**"

jobs:
  build_web:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build web
        working-directory: web/src
        run: |
          npm ci
          npm run build
          tar -zcf ../web_dist.tar.gz ../dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/web_dist.tar.gz

  test_build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target_id:
          - android_arm64_v8a
          - darwin_amd64
          - darwin_arm64_v8a
          - freebsd_386
          - freebsd_amd64
          - freebsd_arm32_v5
          - freebsd_arm32_v6
          - freebsd_arm32_v7a
          - freebsd_arm64_v8a
          - linux_386
          - linux_amd64
          - linux_arm32_v5
          - linux_arm32_v6
          - linux_arm32_v7a
          - linux_arm64_v8a
          - linux_loong64
          - linux_mips
          - linux_mips_softfloat
          - linux_mips64
          - linux_mips64_softfloat
          - linux_mips64le
          - linux_mips64le_softfloat
          - linux_mipsle
          - linux_mipsle_softfloat
          - linux_ppc64le
          - linux_riscv64
          - linux_s390x
          - openbsd_386
          - openbsd_amd64
          - openbsd_arm32_v5
          - openbsd_arm32_v6
          - openbsd_arm32_v7a
          - openbsd_arm64_v8a
          - windows_386
          - windows_amd64
          - windows_arm32_v5
          - windows_arm32_v6
          - windows_arm32_v7a
          - windows_arm64_v8a
          - windows7_386
          - windows7_amd64
      fail-fast: false

    needs:
      - build_web

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup workflow env
        run: |
          TOOLCHAIN=$(jq ".[\"${{ matrix.target_id }}\"].toolchain" -r < pkg/uniarch/arch_map.json)
          echo "TOOLCHAIN=$TOOLCHAIN" >> $GITHUB_ENV
          GOOS=$(jq ".[\"${{ matrix.target_id }}\"].goos" -r < pkg/uniarch/arch_map.json)
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          GOARCH=$(jq ".[\"${{ matrix.target_id }}\"].goarch" -r < pkg/uniarch/arch_map.json)
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
          GOARM=$(jq ".[\"${{ matrix.target_id }}\"].goarm" -r < pkg/uniarch/arch_map.json)
          echo "GOARM=$GOARM" >> $GITHUB_ENV
          GOMIPS=$(jq ".[\"${{ matrix.target_id }}\"].gomips" -r < pkg/uniarch/arch_map.json)
          echo "GOMIPS=$GOMIPS" >> $GITHUB_ENV

      - name: Setup Go toolchain
        if: ${{ matrix.target_id != 'windows7_386' && matrix.target_id != 'windows7_amd64' }}
        uses: actions/setup-go@v5
        with:
          cache: false
          go-version: ${{ env.TOOLCHAIN }}
          check-latest: true

      - name: Setup Go toolchain (Windows 7)
        if: ${{ matrix.target_id == 'windows7_386' || matrix.target_id == 'windows7_amd64' }}
        run: |
          sudo rm -rf `which go`
          sudo rm -rf /usr/local/go
          curl -L -o /tmp/go-legacy-win7.tar.gz https://github.com/thongtech/go-legacy-win7/releases/download/v1.24.2-1/go-legacy-win7-1.24.2-1.linux_amd64.tar.gz
          tar -xvf /tmp/go-legacy-win7.tar.gz -C $HOME
          rm -f go-legacy-win7.tar.gz
          export GOROOT=$HOME/go-legacy-win7
          export PATH=$PATH:$GOROOT/bin
          echo "GOROOT=$GOROOT" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV
          go version

      - name: Download web artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: web

      - name: Extract web artifacts
        working-directory: web
        run: |
          tar -zxf web_dist.tar.gz
          rm -f web_dist.tar.gz

      - name: Build core application
        run: |
          GOOS=${{ env.GOOS }} \
          GOARCH=${{ env.GOARCH }} \
          GOARM=${{ env.GOARM }} \
          GOMIPS=${{ env.GOMIPS }} \
          BUILD_PLATFORM=gh-ci-test \
          make build

      - name: Create release digest
        run: |
          make digest | tee build/${{ matrix.target_id }}.dgst

      - name: Upload package to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target_id }}
          path: build/dist/*
